name: Stable Build

on:
  push:
    branches: [ stable ]
  pull_request:
    branches: [ stable ]
    
jobs:

  build-windows:
    
    runs-on: windows-2019

    steps:

    - uses: actions/checkout@v2

    - name: Retrieve submodules
      shell: cmd
      run: git submodule update --init --recursive
      
    - name: Build Python
      shell: cmd
      run: |
        cd Scripts
        call BuildPythonForWindows.bat --ci
        cd ..
        mkdir cmake-build-release
        mkdir cmake-build-release32
        cd cmake-build-release
        cmake .. -DCONFIG_32BIT=True -DMVDIST_ONLY=True
        
    - name: Build DearPyGui
      shell: cmd
      run: |
        cmake --build cmake-build-release --config Release

    - name: Build Release DearPyGui Wheel
      shell: cmd
      run: |
        cd Distribution
        call "%dir%..\Dependencies\cpython\PCbuild\amd64\python.exe" "%dir%BuildPythonWheel.py" D:/a/DearPyGui/DearPyGui/cmake-build-release/DearPyGui/Release/dearpygui.pyd dearpygui.pyd
        call "%dir%..\Dependencies\cpython\PCbuild\amd64\python.exe" -m setup bdist_wheel --plat-name win_amd64 --dist-dir D:/a/DearPyGui/DearPyGui/dist

    - name: Upload Release DearPyGui Wheel
      if: "contains(github.event.head_commit.message, 'upload run')"
      shell: cmd
      run: |
        call "%dir%Dependencies\cpython\PCbuild\amd64\python.exe" -m twine upload dist/* -u __token__ -p ${{ secrets.pypi_password }} --skip-existing

  build-windows37:
    
    runs-on: windows-2019

    steps:

    - uses: actions/checkout@v2

    - name: Retrieve submodules
      shell: cmd
      run: |
        git submodule update --init --recursive
        cd Dependencies
        cd cpython
        git checkout v3.7.9
      
    - name: Build Python
      shell: cmd
      run: |
        cd Scripts
        call BuildPythonForWindows.bat --ci
        cd ..
        mkdir cmake-build-release
        mkdir cmake-build-release32
        cd cmake-build-release
        cmake .. -DMV37DIST=True
        cd .. -DMVDIST_ONLY=True -DMV37DIST=True
        
    - name: Build DearPyGui
      shell: cmd
      run: |
        cmake --build cmake-build-release --config Release

    - name: Build Release DearPyGui Wheel
      shell: cmd
      run: |
        cd Distribution
        call "%dir%..\Dependencies\cpython\PCbuild\amd64\python.exe" "%dir%BuildPythonWheel.py" D:/a/DearPyGui/DearPyGui/cmake-build-release/DearPyGui/Release/dearpygui.pyd dearpygui.pyd
        call "%dir%..\Dependencies\cpython\PCbuild\amd64\python.exe" -m setup bdist_wheel --plat-name win_amd64 --dist-dir D:/a/DearPyGui/DearPyGui/dist

    - name: Upload Release DearPyGui Wheel
      if: "contains(github.event.head_commit.message, 'upload run')"
      shell: cmd
      run: |
        call "%dir%Dependencies\cpython\PCbuild\amd64\python.exe" -m twine upload dist/* -u __token__ -p ${{ secrets.pypi_password }} --skip-existing


  build-MacOS:
    
    runs-on: MacOS-latest

    steps:

    - uses: actions/checkout@v2

    - name: Retrieve submodules
      run: git submodule update --init --recursive
    
    - name: Build Python
      run: |
        brew install openssl
        cd Dependencies/cpython
        ./configure --enable-framework --with-openssl=$(brew --prefix openssl)
        sudo make && sudo make install
        cp pyconfig.h Include/pyconfig.h
        cd ..
        cd ..
        pip3 install wheel
        pip3 install twine
        mkdir cmake-build-release
        cd cmake-build-release
        cmake .. -DMVDIST_ONLY=True

    - name: Build Dear PyGui
      run: |
        cmake --build cmake-build-release --config Release

    - name: Build Release DearPyGui Wheel
      run: |
        cd /Users/runner/work/DearPyGui/DearPyGui/Distribution
        python3 BuildPythonWheel.py /Users/runner/work/DearPyGui/DearPyGui/cmake-build-release/DearPyGui/dearpygui.so dearpygui.so
        python3 -m setup bdist_wheel --plat-name macosx-10.6-x86_64 --dist-dir /Users/runner/work/DearPyGui/DearPyGui/dist

    - name: Upload Release DearPyGui Wheel
      if: "contains(github.event.head_commit.message, 'upload run')"
      run: |
        python3 -m twine upload dist/* -u __token__ -p ${{ secrets.pypi_password }} --skip-existing

  build-MacOS37:
    
    runs-on: MacOS-latest

    steps:

    - uses: actions/checkout@v2

    - name: Retrieve submodules
      run: |
        git submodule update --init --recursive
        cd Dependencies
        cd cpython
        git checkout v3.7.9
    
    - name: Build Python
      run: |
        brew install openssl
        cd Dependencies/cpython
        ./configure --enable-framework --with-openssl=$(brew --prefix openssl)
        sudo make && sudo make install
        cp pyconfig.h Include/pyconfig.h
        cd ..
        cd ..
        pip3 install wheel
        pip3 install twine
        mkdir cmake-build-release
        cd cmake-build-release
        cmake .. -DMVDIST_ONLY=True -DMV37DIST=True

    - name: Build Dear PyGui
      run: |
        cmake --build cmake-build-release --config Release

    - name: Build Release DearPyGui Wheel
      run: |
        cd /Users/runner/work/DearPyGui/DearPyGui/Distribution
        python3 BuildPythonWheel.py /Users/runner/work/DearPyGui/DearPyGui/cmake-build-release/DearPyGui/dearpygui.so dearpygui.so
        python3 -m setup bdist_wheel --plat-name macosx-10.6-x86_64 --dist-dir /Users/runner/work/DearPyGui/DearPyGui/dist

    - name: Upload Release DearPyGui Wheel
      if: "contains(github.event.head_commit.message, 'upload run')"
      run: |
        python3 -m twine upload dist/* -u __token__ -p ${{ secrets.pypi_password }} --skip-existing

  build-Ubuntu:

    runs-on: ubuntu-20.04

    steps:

    - uses: actions/checkout@v2

    - name: Retrieve submodules
      run: git submodule update --init --recursive
    
    - name: Build Python
      run: |
        sudo apt-get install xorg-dev
        cd Dependencies/cpython
        mkdir debug
        cd debug
        ../configure --enable-shared --prefix $PWD
        sudo make && sudo make install
        cd ..
        cd ..
        cd ..
        pip3 install wheel
        pip3 install twine
        mkdir cmake-build-release
        cd cmake-build-release
        cmake .. -DMVDIST_ONLY=True

    - name: Build DearPyGui
      run: |
        cmake --build cmake-build-release --config Release

    - name: Build Test DearPyGui Wheel
      run: |
        cd /home/runner/work/DearPyGui/DearPyGui/Distribution
        python3 BuildPythonWheel.py /home/runner/work/DearPyGui/DearPyGui/cmake-build-release/DearPyGui/dearpygui.so dearpygui.so
        python3 -m setup bdist_wheel --plat-name manylinux1_x86_64 --dist-dir /home/runner/work/DearPyGui/DearPyGui/dist

    - name: Upload Test DearPyGui Wheel
      if: "contains(github.event.head_commit.message, 'upload run')"
      run: |
        python3 -m twine upload dist/* -u __token__ -p ${{ secrets.pypi_password }} --skip-existing

  build-Ubuntu37:

    runs-on: ubuntu-20.04

    strategy:
      # You can use PyPy versions in python-version.
      # For example, pypy2 and pypy3
      matrix:
        python-version: [3.7]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64' 

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Retrieve submodules
      run: |
        git submodule update --init --recursive
        cd Dependencies
        cd cpython
        git checkout v3.7.9
    
    - name: Build Python
      run: |
        sudo apt-get install xorg-dev
        cd Dependencies/cpython
        mkdir debug
        cd debug
        ../configure --enable-shared --prefix $PWD
        sudo make && sudo make install
        cd ..
        cd ..
        cd ..
        pip3 install wheel
        pip3 install twine
        mkdir cmake-build-release
        cd cmake-build-release
        cmake .. -DMVDIST_ONLY=True -DMV37DIST=True

    - name: Build DearPyGui
      run: |
        cmake --build cmake-build-release --config Release

    - name: Build Test DearPyGui Wheel
      run: |
        cd /home/runner/work/DearPyGui/DearPyGui/Distribution
        python BuildPythonWheel.py /home/runner/work/DearPyGui/DearPyGui/cmake-build-release/DearPyGui/dearpygui.so dearpygui.so
        python -m setup bdist_wheel --plat-name manylinux1_x86_64 --dist-dir /home/runner/work/DearPyGui/DearPyGui/dist

    - name: Upload Test DearPyGui Wheel
      if: "contains(github.event.head_commit.message, 'upload run')"
      run: |
        python3 -m twine upload dist/* -u __token__ -p ${{ secrets.pypi_password }} --skip-existing